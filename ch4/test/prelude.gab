// Void

data void :=;

def absurd f := case f : void of;


// Unit

data unit := Unit;


// Booleans

data bool := True | False;

def if c t e := case c of True => t | False => e;

def not b := if b False True;


// Basic higher-order functions

def id x := x;

def const x y := y;

def compose f g x := f (g x);

def flip f x y := f y x;


// Monomorphic product test

data bpair := BPair bool bool;

def buncurry f p := case p of BPair x y => f x y;

def bcurry f x y := f (BPair x y);